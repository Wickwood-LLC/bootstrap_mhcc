<?php

use Drupal\Core\Render\Markup;
use Drupal\Core\Url;

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

function bootstrap_mhcc_preprocess_html(&$variables) {
	$node = \Drupal::routeMatch()->getParameter('node');
	if ($node instanceof \Drupal\node\NodeInterface) {
	  // You can get nid and anything else you need from the node object.
	  $variables['is_published'] = $node->isPublished();
  }
  if (!empty($variables['head_title']['name'])) {
    $variables['head_title']['name'] = html_entity_decode($variables['head_title']['name']);
  }
}

function bootstrap_mhcc_preprocess_page(&$variables) {
  $variables['site_name'] = Markup::create(strip_tags(html_entity_decode(\Drupal::config('system.site')->get('name'))));
}

function bootstrap_mhcc_preprocess_maintenance_page(&$variables) {
  $variables['site_name'] = Markup::create(strip_tags(html_entity_decode(\Drupal::config('system.site')->get('name'))));
}

function bootstrap_mhcc_bootstrap_colorize_text_alter(array &$texts) {
  $texts['matches'][t('Apply')->render()] = 'success';
}

/**
 * Prepares variables for username templates.
 *
 * Default template: username.html.twig.
 *
 * Modules that make any changes to variables like 'name' or 'extra' must ensure
 * that the final string is safe.
 *
 * @param array $variables
 *   An associative array containing:
 *   - account: The user account (\Drupal\Core\Session\AccountInterface).
 */
function bootstrap_mhcc_preprocess_username(&$variables) {
  $external = FALSE;
  if ($variables['uid'] && $variables['profile_access']) {
    // We are linking to a local user.
    $variables['attributes']['title'] = t('Contact Author');
  }
  elseif (!empty($account->homepage)) {
    $external = TRUE;
  }

  // We have a link path, so we should generate a URL.
  if (isset($variables['link_path'])) {
    if ($external) {
      $variables['attributes']['href'] = Url::fromUri($variables['link_path'], $variables['link_options'])
        ->toString();
    }
    else {
      $variables['attributes']['href'] = '/' . Url::fromRoute('entity.user.canonical', [
        'user' => $variables['uid'],
      ])->getInternalPath() . '/contact';
    }
    $variables['attributes']['target'] = '_blank';
  }
}
